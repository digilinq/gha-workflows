name: Populate project configuration
on:
  workflow_call:
    inputs:
      ref:
        description: 'Which ref to check out'
        type: string
        required: false
    outputs:
      config:
        description: The project configuration
        value: ${{ jobs.config.outputs.config }}
      java-version:
        description: The Java version
        value: ${{ jobs.config.outputs.java-version }}
      maven-version:
        description: The Maven version
        value: ${{ jobs.config.outputs.maven-version }}
      deployment:
        description: Deployment descriptor
        value: ${{ jobs.config.outputs.deployment }}
      deployment1:
        description: Deployment descriptor
        value: ${{ jobs.config.outputs.deployment1 }}
      kubernetes-namespace:
        description: Kubernetes namespace to deploy
        value: ${{ jobs.config.outputs.deployment-namespace }}
jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.extract-config.outputs.configuration }}
      java-version: ${{ fromJson(steps.extract-config.outputs.configuration).java.version }}
      maven-version: ${{ fromJson(steps.extract-config.outputs.configuration).maven.version }}
      deployment: ${{ steps.extract-config.outputs.deployment }}
      deployment1: ${{ toJSON(fromJSON(steps.extract-config.outputs.configuration).deployment) }}
      deployment-namespace: ${{ fromJson(steps.extract-config.outputs.configuration).deployment.namespace }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract project configuration
        id: extract-config
        run: |
          echo "configuration=$(jq -c '.' '.github/project-config.json')" >> "$GITHUB_OUTPUT"
          echo "deployment=$(jq -c '.deployment' '.github/project-config.json')" >> "$GITHUB_OUTPUT"

#      - name: Determine effective workflow configuration
#        uses: RoyalAholdDelhaize/tech-nl-github-workflows/.github/actions/effective-config@v1
#        id: effective-config
#
#      - name: Create or update project configuration
#        run: |
#          echo "${{ steps.effective-config.outputs.config }}" > .github/workflows/project-configuration.yaml
#        shell: bash
