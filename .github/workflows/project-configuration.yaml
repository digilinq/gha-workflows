name: Populate project configuration
on:
  workflow_call:
    inputs:
      ref:
        description: 'Which ref to check out'
        type: string
        required: false
    outputs:
      config:
        description: The project configuration
        value: ${{ jobs.config.outputs.config }}
      java-version:
        description: The Java version
        value: ${{ jobs.config.outputs.java-version }}
      maven-version:
        description: The Maven version
        value: ${{ jobs.config.outputs.maven-version }}
      github:
        description: GitHub configuration
        value: ${{ jobs.config.outputs.github }}
      github-runner:
        description: GitHub configuration
        value: ${{ jobs.config.outputs.github-runner }}    
      deployment:
        description: Deployment descriptor
        value: ${{ jobs.config.outputs.deployment }}      
      kubernetes-namespace:
        description: Kubernetes namespace to deploy
        value: ${{ jobs.config.outputs.deployment-namespace }}
jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      config: ${{ steps.extract-config.outputs.configuration }}
      java-version: ${{ fromJson(steps.extract-config.outputs.configuration).java.version }}
      maven-version: ${{ fromJson(steps.extract-config.outputs.configuration).maven.version }}
      github: ${{ toJson(fromJson(steps.extract-config.outputs.configuration).github) }}
      github-runner: ${{ fromJson(steps.extract-config.outputs.configuration).github.runner }}
      deployment: ${{ toJson(fromJson(steps.extract-config.outputs.configuration).deployment) }}
      deployment-namespace: ${{ fromJson(steps.extract-config.outputs.configuration).deployment.namespace }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if project configuration exists
        id: check-config
        run: |
          if [ ! -f .github/project-config.json ]; then
            echo "::error::Project configuration file not found"
            exit 1
          fi  
      - name: Extract project configuration
        id: extract-config
        run: |
          echo "configuration=$(jq -c '.' '.github/project-config.json')" >> "$GITHUB_OUTPUT"
          echo "deployment=$(jq -c '.deployment' '.github/project-config.json')" >> "$GITHUB_OUTPUT"

  

         
