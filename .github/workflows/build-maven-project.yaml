name: Build maven project
on:
  workflow_call:
    inputs:
      runner:
        description: What build agent to use
        type: string
        required: false
        default: 'ubuntu-latest'
      ref:
        description: Which branch to check out
        type: string
        required: false
      java-version:
        description: The Java version to setup
        type: string
        required: true
      maven-version:
        description: The Maven version to setup (only used on self-hosted)
        type: string
        required: false
        default: '3.8.2'
      docker-file:
        description: The path to the Dockerfile
        type: string
        required: false
        default: 'deployment/Dockerfile'
      artifact-name:
        description: The name of the artifact
        type: string
        required: false
        default: 'artifact'
      artifact-path:
        description: The path to the artifact
        type: string
        required: false
        default: 'artifact.tgz'

jobs:
  build-maven-project:
    name: Build maven project
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Setup Java ${{ inputs.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ inputs.java-version }}
#          cache: maven

      - name: Setup Maven ${{ inputs.maven-version != '' && inputs.maven-version || '3.8.2' }}
#        if: ${{ inputs.maven-version != '' }}
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ inputs.maven-version != '' && inputs.maven-version || '3.8.2' }}

      - name: Build artifact
        run: |
          script="$GITHUB_WORKSPACE/ci/build.sh"
          if [ -f "./ci/build.sh" ]; then
            script="./ci/build.sh"
          fi
          echo "Running $script"
          git config --global --add safe.directory '*'
          sh "$script"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy artifact and Dockerfile
        run: |
          mkdir staging
          cp ${{ inputs.artifact-path }} staging
          cp ${{ inputs.docker-file }} staging

      - name: upload artifact ${{ inputs.artifact-name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: staging
          if-no-files-found: error
